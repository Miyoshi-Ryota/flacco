% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/feature_gcm_all.R
\name{calculateGCMFeatures}
\alias{calculateGCMFeatures}
\title{Calculate GCM features for a given function}
\usage{
calculateGCMFeatures(feat.object, control = list())
}
\arguments{
\item{feat.object}{[\code{\link{FeatureObject}}]\cr
A feature object as created by \code{\link{createFeatureObject}}.
Note that the object needs to contain the number of blocks per dimension
(parameter \code{blocks}) in order to allow cellmapping features to compute.}

\item{control}{[\code{\link{list}}]\cr
A list object that stores additional configuration parameters.
The following parameters are used here:\cr
\code{gcm.plot} is a boolean, indicating whether GCM results are visualised in a plot.\cr
\code{gcm.plot.colors} is a vector defining the first cell colours to be used by the plot.
   Note that the first colour is used for cells that belong to multiple attractors,
   the second colour is used for attractors,
   and the remaining ones are assigned to cells with distinct single attractors.}
}
\value{
[\code{\link{list}(24)} of \code{\link{numeric}(1)}].\cr
  List of features.\cr
  For further information, see details.
}
\description{
Based on Generalized Cell Mapping (GCM) techniques, the cell mappings are interpreted as
an absorbing Markov chain, from which 24 features are derived.

Provided the decision space is divided into a grid of cells, GCM incorporates
the dynamics of a system into the cell mapping. For each cell, the probabilities of transitioning
to successor cells are calculated, where each cell can have multiple successor cells.

Computation is performed based on \code{min}, \code{mean}, and \code{near} approaches for finding a representative
objective function value for each cell.
}
\details{
For the \code{min}, \code{mean}, and \code{near} approaches, \code{calculateGCMFeatures}
  calculates seven features each. Furthermore, three features summarise the
  findings of the \code{min} and \code{mean} approaches in order to study similarities and
  differences between both.\cr
  \code{gcm.{min, mean, near}$uncert_ratio}: Ratio of uncertain cells (for min and mean approaches),\cr
  \code{gcm.{min, mean, near}$prob_best}: Probability to find the best cell,\cr
  \code{gcm.{min, mean, near}${min, max, mean, std}_bs}: Aggregations of the different basin sizes,\cr
  \code{gcm.{min, mean, near}$no_attr}: Number of attractors within the grid,\cr
  \code{gcm.common.pcells}: Number of periodic cells common between min and mean approaches,\cr
  \code{gcm.common.tcells}: Number of transient cells common between min and mean approaches, and\cr
  \code{gcm.common.dcells}: Percentage of cells that change their roles from one approach to the other.
}
\examples{
# (1) create the initial design:
X = t(replicate(2000, runif(2, -10, 10)))
y = apply(X, 1, function(x) sum(x^2))
feat.object = createFeatureObject(X = X, y = y,
  lower = -10, upper = 10, blocks = 10)
# (2) compute the Generalized Cell Mapping features:
calculateGCMFeatures(feat.object = feat.object, control = list(gcm.plot=TRUE))
}
\references{
See Kerschke et al. (2014), \dQuote{Cell Mapping Techniques for Exploratory Landscape Analysis},
 in EVOLVE-A Bridge between Probability, Set Oriented Numerics, and Evolutionary Computation V,
 pp. 115-131 (\url{http://dx.doi.org/10.1007/978-3-319-07494-8_9}).
}

